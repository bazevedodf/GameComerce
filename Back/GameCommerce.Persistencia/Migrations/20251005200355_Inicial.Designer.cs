// <auto-generated />
using System;
using GameCommerce.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameCommerce.Persistencia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005200355_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("GameCommerce.Dominio.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("SiteInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SiteInfoId");

                    b.ToTable("Categorias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Explore, crie e brilhe no Fortnite com estilo!",
                            Icon = "/uploads/categorias/fortnite-ico.png",
                            Imagem = "/uploads/categorias/categoria-fortnite.png",
                            Name = "FORTNITE",
                            SiteInfoId = 1,
                            Slug = "fortnite"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Ação rápida e intensa em batalhas épicas.",
                            Icon = "/uploads/categorias/freefire-ico.png",
                            Imagem = "/uploads/categorias/categoria-free-fire.webp",
                            Name = "FREE FIRE",
                            SiteInfoId = 1,
                            Slug = "free-fire"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Ação tática com estilo e precisão.",
                            Icon = "/uploads/categorias/valorant-ico.png",
                            Imagem = "/uploads/categorias/categoria-valorant.jpg",
                            Name = "VALORANT",
                            SiteInfoId = 1,
                            Slug = "valorant"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Batalhas estratégicas em um mundo de fantasia.",
                            Icon = "/uploads/categorias/legue-of-legends-ico.png",
                            Imagem = "/uploads/categorias/categoria-legue-of-legend.png",
                            Name = "LEAGUE OF LEGENDS",
                            SiteInfoId = 1,
                            Slug = "league-of-legends"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Explore, crie e brilhe no Roblox com estilo!",
                            Icon = "/uploads/categorias/robux-ico.png",
                            Imagem = "/uploads/categorias/categoria-roblox.webp",
                            Name = "ROBLOX",
                            SiteInfoId = 1,
                            Slug = "roblox"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Lutas rápidas e divertidas com amigos.",
                            Icon = "/uploads/categorias/brawstars-ico.png",
                            Imagem = "/uploads/categorias/categoria-brawl-stars.webp",
                            Name = "BRAWL STARS",
                            SiteInfoId = 1,
                            Slug = "brawl-stars"
                        });
                });

            modelBuilder.Entity("GameCommerce.Dominio.Cupom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MensagemErro")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("SiteInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoDesconto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Valido")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("ValorDesconto")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("SiteInfoId");

                    b.ToTable("Cupons", (string)null);
                });

            modelBuilder.Entity("GameCommerce.Dominio.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensPedido", (string)null);
                });

            modelBuilder.Entity("GameCommerce.Dominio.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CupomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DescontoAplicado")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Frete")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("MeioPagamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("SiteInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CupomId");

                    b.HasIndex("SiteInfoId");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("GameCommerce.Dominio.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Avaliacao")
                        .HasPrecision(3, 1)
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Desconto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmDestaque")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Entrega")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoOriginal")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("SiteInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalAvaliacoes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CategoriaId1");

                    b.HasIndex("SiteInfoId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("GameCommerce.Dominio.SiteInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Dominio")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Facebook")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("YouTube")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SiteInfo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua dos Games, 123 - São Paulo, SP",
                            Cnpj = "12.345.678/0001-99",
                            Dominio = "localhost:4200",
                            Email = "contato@gamecommerce.com.br",
                            Facebook = "https://facebook.com/gamecommerce",
                            Instagram = "https://instagram.com/gamecommerce",
                            LogoUrl = "/uploads/logo-site.png",
                            Nome = "Game Commerce",
                            Whatsapp = "(11) 99999-9999"
                        });
                });

            modelBuilder.Entity("GameCommerce.Dominio.Subcategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategorias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Name = "CONTAS FORTNITE",
                            Slug = "contas-fortnite"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Name = "BUNDLES FORTNITE",
                            Slug = "bundles-fortnite"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 2,
                            Name = "CONTAS FREEFIRE",
                            Slug = "contas-freefire"
                        });
                });

            modelBuilder.Entity("GameCommerce.Dominio.Categoria", b =>
                {
                    b.HasOne("GameCommerce.Dominio.SiteInfo", "SiteInfo")
                        .WithMany("Categorias")
                        .HasForeignKey("SiteInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteInfo");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Cupom", b =>
                {
                    b.HasOne("GameCommerce.Dominio.SiteInfo", "SiteInfo")
                        .WithMany("Cupons")
                        .HasForeignKey("SiteInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteInfo");
                });

            modelBuilder.Entity("GameCommerce.Dominio.ItemPedido", b =>
                {
                    b.HasOne("GameCommerce.Dominio.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameCommerce.Dominio.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Pedido", b =>
                {
                    b.HasOne("GameCommerce.Dominio.Cupom", "Cupom")
                        .WithMany("Pedidos")
                        .HasForeignKey("CupomId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GameCommerce.Dominio.SiteInfo", "SiteInfo")
                        .WithMany("Pedidos")
                        .HasForeignKey("SiteInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cupom");

                    b.Navigation("SiteInfo");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Produto", b =>
                {
                    b.HasOne("GameCommerce.Dominio.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameCommerce.Dominio.Categoria", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId1");

                    b.HasOne("GameCommerce.Dominio.SiteInfo", "SiteInfo")
                        .WithMany("Produtos")
                        .HasForeignKey("SiteInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("SiteInfo");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Subcategoria", b =>
                {
                    b.HasOne("GameCommerce.Dominio.Categoria", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Categoria", b =>
                {
                    b.Navigation("Produtos");

                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Cupom", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("GameCommerce.Dominio.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("GameCommerce.Dominio.SiteInfo", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Cupons");

                    b.Navigation("Pedidos");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
